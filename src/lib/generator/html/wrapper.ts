import css from 'lib/generator/css/index';
import js from 'lib/generator/js/index';
import widthRange from 'lib/generator/widthRange';
import timestamp from 'lib/utils/timestamp';

import { fontList } from '../styleProps';
import frame from './frame';

export default ({ config, assets, variables }) => {
	const containerID = `${config.name}-box`;

	const frameCSS = assets
		.map(
			({ node, filename }) =>
				frame({
					node,
					filename,
					widthRange: widthRange(assets),
					alt: config.alt,
					config,
					variables
				}).css
		)
		.join('\n\n');

	const assetsHTML = assets
		.map(
			({ node, filename }) =>
				frame({
					node,
					filename,
					widthRange: widthRange(assets),
					alt: config.alt,
					config,
					variables
				}).html
		)
		.join('\n\n');

	const ts = timestamp();

	let code = `<!-- Generated by figma2html on ${ts} -->\n`;

	switch (config.output) {
		case 'html': {
			code += `<style type='text/css'>${css.page({
				id: containerID,
				config,
				css: frameCSS
			})}</style>`;
			code += `<div id="${containerID}" class="figma2html">${assetsHTML}</div>`;
			if (config.includeResizer) code += `<script>${js.resizer(containerID)}</script>`;
			if (config.includeGoogleFonts && fontList.length > 0)
				code += `<script>${js.fonts(fontList)}</script>`;
			if (config.customScript) code += `<script>${config.customScript}<script>`;
			break;
		}
		case 'svelte': {
			// scripts all go in an onMount function up top
			if (
				config.includeResizer ||
				(config.includeGoogleFonts && fontList.length) ||
				config.customScript
			) {
				code += `<script>import { onMount } from "svelte";`;
				code += `onMount(() => {`;
				if (config.includeResizer) code += js.resizer(containerID);
				if (config.includeGoogleFonts && fontList.length) code += js.fonts(fontList);
				if (config.customScript) code += config.customScript;
				code += `})</script>`;
			}
			code += `<div id="${containerID}" class="figma2html">${assetsHTML}</div>`;
			code += `<style>${css.page({ id: containerID, config, css: frameCSS })}</style>`;
			break;
		}
	}

	code += `\n<!-- End figma2html generated content - ${timestamp()} -->`;

	return code;
};
